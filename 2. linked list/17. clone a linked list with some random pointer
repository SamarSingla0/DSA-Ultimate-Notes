brute force
Node *cloneLL(Node *head){
    Node* temp = head;
    unordered_map<Node*, Node*> mpp;
    while(temp != NULL){
        Node* newNode = new Node(temp->data);
        mpp[temp] = newNode;
        temp = temp->next;
    }
    
    temp = head;
    while(temp != NULL){
        Node* copyNode = mpp[temp];
        copyNode->next = mpp[temp->next];
        copyNode->random = mpp[temp->random];
        temp = temp->next;
    }
    return mpp[head];
}

optimal approch
void insertCopyInBetween(Node* head){
    Node* temp = head;
    while(temp != NULL){
        Node* nextElement = temp->next;
        Node* copy = new Node(temp->data);  
        copy->next = nextElement;  
        temp->next = copy;         
        temp = nextElement;         
    }
}
void connectRandomPointers(Node* head){
    Node* temp = head;
    while(temp != NULL){
        Node* copyNode = temp->next;    
        if(temp->random){   
            copyNode->random = temp->random->next; 
        }
        else{
            copyNode->random = NULL;   
        }
        
        temp = temp->next->next;   
    }
}

Node* getDeepCopyList(Node* head){
    Node* temp = head;
    Node* dummyNode = new Node(-1);   
    Node* res = dummyNode;             

    while(temp != NULL){
        res->next = temp->next;
        res = res->next;
        temp->next = temp->next->next;
        temp = temp->next;
    }
    return dummyNode->next;   
}

Node *cloneLL(Node *head){
    if(!head) return nullptr;   
    insertCopyInBetween(head);
    connectRandomPointers(head);
    return getDeepCopyList(head); 
}
