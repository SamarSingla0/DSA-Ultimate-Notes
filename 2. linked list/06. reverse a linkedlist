brute force
Node* reverseLinkedList(Node* head) {
    Node* temp = head;  
    
    stack<int> st;     
    while (temp != nullptr) {
        st.push(temp->data); 
        temp = temp->next;    
    }
    temp = head; 
    while (temp != nullptr) {
        temp->data = st.top();  
        st.pop();      
        temp = temp->next;     
    }
    return head;  
}

iterative method
Node* reverseLinkedList(Node *head)
{
   Node* temp = head;
   Node* prev = NULL;  
  
   while(temp != NULL){  
       Node* front = temp->next;  
      
       temp->next = prev;  
       prev = temp;  
       temp = front; 
   }
   return prev;  
}


recursive method
Node* reverseLinkedList(Node* head) {
    if (head == NULL || head->next == NULL) {
        return head;
    }
    Node* newHead = reverseLinkedList(head->next);
 
    Node* front = head->next;
    front->next = head;
    head->next = NULL;  
    return newHead;
}
