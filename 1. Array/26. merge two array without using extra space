brute force
we will use extra space vector of size n+m to store elements in sorted fashion
while (left < n && right < m) {
        if (arr1[left] <= arr2[right]) {
            arr3[index] = arr1[left];
            left++, index++;
        }
        else {
            arr3[index] = arr2[right];
            right++, index++;
        }
    }
    while (left < n) {
        arr3[index++] = arr1[left++];
    }
    while (right < m) {
        arr3[index++] = arr2[right++];
    }


    optimal approch
    it will be implemeted when array are in sorted manner
    void merge(long long arr1[], long long arr2[], int n, int m) {

    int left = n - 1;
    int right = 0;

    while (left >= 0 && right < m) {
        if (arr1[left] > arr2[right]) {
            swap(arr1[left], arr2[right]);
            left--, right++;
        }
        else {
            break;
        }
    }

    sort(arr1, arr1 + n);
    sort(arr2, arr2 + m);
}
